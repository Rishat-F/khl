from pathlib import Path

import pytest

from preprocess import (
    PLACEHOLDER,
    UNKNOWN,
    codes_to_lemmas,
    fix_lemma,
    get_freq_dict,
    is_stop_word,
    lemmas_to_codes,
    lemmatize,
    merge_codes,
    merge_dates,
    merge_lemmas,
    merge_locs,
    merge_ners,
    merge_orgs,
    merge_pens,
    merge_pers,
    text_to_codes,
)


@pytest.mark.parametrize(
    "text_list,expected_merged_text_list",
    [
        (["per"], ["per"]),
        (["per", "per", "per"], ["pers"]),
        (["слово", "per", "per", "слово"], ["слово", "pers", "слово"]),
        (
            ["per", "и", "per", "per", "и", "per", "per", "per"],
            ["per", "и", "pers", "и", "pers"],
        ),
        (
            ["слово", "слово", "per", "per", "слово", "слово"],
            ["слово", "слово", "pers", "слово", "слово"],
        ),
    ],
)
def test_merge_pers(text_list, expected_merged_text_list):
    assert merge_pers(text_list) == expected_merged_text_list


@pytest.mark.parametrize(
    "text_list,expected_merged_text_list",
    [
        (["org"], ["org"]),
        (["org", "org", "org"], ["orgs"]),
        (["слово", "org", "org", "слово"], ["слово", "orgs", "слово"]),
        (
            ["org", "и", "org", "org", "и", "org", "org", "org"],
            ["org", "и", "orgs", "и", "orgs"],
        ),
        (
            ["слово", "слово", "org", "org", "слово", "слово"],
            ["слово", "слово", "orgs", "слово", "слово"],
        ),
    ],
)
def test_merge_orgs(text_list, expected_merged_text_list):
    assert merge_orgs(text_list) == expected_merged_text_list


@pytest.mark.parametrize(
    "text_list,expected_merged_text_list",
    [
        (["loc"], ["loc"]),
        (["loc", "loc", "loc"], ["locs"]),
        (["слово", "loc", "loc", "слово"], ["слово", "locs", "слово"]),
        (
            ["loc", "и", "loc", "loc", "и", "loc", "loc", "loc"],
            ["loc", "и", "locs", "и", "locs"],
        ),
        (
            ["слово", "слово", "loc", "loc", "слово", "слово"],
            ["слово", "слово", "locs", "слово", "слово"],
        ),
    ],
)
def test_merge_locs(text_list, expected_merged_text_list):
    assert merge_locs(text_list) == expected_merged_text_list


@pytest.mark.parametrize(
    "text_list,expected_merged_text_list",
    [
        (["date"], ["date"]),
        (["date", "date", "date"], ["dates"]),
        (["слово", "date", "date", "слово"], ["слово", "dates", "слово"]),
        (
            ["date", "и", "date", "date", "и", "date", "date", "date"],
            ["date", "и", "dates", "и", "dates"],
        ),
        (
            ["слово", "слово", "date", "date", "слово", "слово"],
            ["слово", "слово", "dates", "слово", "слово"],
        ),
    ],
)
def test_merge_dates(text_list, expected_merged_text_list):
    assert merge_dates(text_list) == expected_merged_text_list


@pytest.mark.parametrize(
    "text_list,expected_merged_text_list",
    [
        (["pen"], ["pen"]),
        (["pen", "pen", "pen"], ["pens"]),
        (["слово", "pen", "pen", "слово"], ["слово", "pens", "слово"]),
        (
            ["pen", "и", "pen", "pen", "и", "pen", "pen", "pen"],
            ["pen", "и", "pens", "и", "pens"],
        ),
        (
            ["слово", "слово", "pen", "pen", "слово", "слово"],
            ["слово", "слово", "pens", "слово", "слово"],
        ),
    ],
)
def test_merge_pens(text_list, expected_merged_text_list):
    assert merge_pens(text_list) == expected_merged_text_list


@pytest.mark.parametrize(
    "text_list,expected_merged_text_list",
    [
        (
            ["per", "per", "org", "org", "loc", "loc", "date", "date", "pen", "pen"],
            ["pers", "orgs", "locs", "dates", "pens"],
        ),
    ],
)
def test_merge_ners(text_list, expected_merged_text_list):
    assert merge_ners(text_list) == expected_merged_text_list


@pytest.mark.parametrize(
    "source_lemma,expected_lemma",
    [
        ("", ""),
        (".,-:?!", ".,-:?!"),
        ("текст", "текст"),
        ("текст текст", "текст текст"),
        ("забиваем", "забивать"),
        ("основный", "основной"),
        ("родный", "родной"),
        ("голова", "гол"),
        ("голы", "гол"),
    ],
)
def test_fix_lemma(source_lemma, expected_lemma):
    assert fix_lemma(source_lemma) == expected_lemma


@pytest.mark.parametrize(
    "lemma,is_stop_word_",
    [
        ("", False),
        (" ", False),
        (":", False),
        ("-", False),
        (".", False),
        ("?", False),
        ("per", False),
        ("текст", False),
        ("и", True),
        ("или", True),
        ("а", True),
    ],
)
def test_is_stop_word(lemma, is_stop_word_):
    assert is_stop_word(lemma) is is_stop_word_


@pytest.mark.parametrize(
    "source_lemmas,expected_lemmas",
    [
        (["и", "или", "текст"], ["и", "или", "текст"]),
        (["и", "и", "и"], ["и"]),
        (["а", "и", "и", "или", "или", "или"], ["а", "и", "или"]),
    ],
)
def test_merge_lemmas(source_lemmas, expected_lemmas):
    assert merge_lemmas(source_lemmas) == expected_lemmas


@pytest.mark.parametrize(
    "source_text,replace_ners_,replace_dates_,replace_penalties_,exclude_stop_words,expected_lemmas",
    [
        (
            "Очень-очень хотим победить",
            False,
            False,
            False,
            False,
            ["очень", "хотеть", "победить"],
        ),
        pytest.param(
            "Очень-очень хотим победить",
            False,
            False,
            False,
            True,
            ["хотеть", "победить"],
            marks=[pytest.mark.bug_1, pytest.mark.xfail(reason="Bug_1 not fixed yet")],
        ),
        (
            "- Как сыграли? - 2:2.",
            False,
            False,
            False,
            True,
            ["-", "как", "сыграть", "?"],
        ),
        (
            "- Играете в футбол? - Иногда.",
            False,
            False,
            False,
            True,
            ["-", "играть", "футбол", "?", "-", "."],
        ),
        (
            "- Сколько выходных дадите команде? - 2.",
            False,
            False,
            False,
            False,
            ["-", "сколько", "выходной", "дать", "команда", "?"],
        ),
        (
            "Сегодня Ансель Галимов забил несколько голов",
            False,
            False,
            False,
            True,
            ["сегодня", "ансель", "галимов", "забить", "гол"],
        ),
        (
            "Мы побеждали и 3:2, и 4:3, и 1:0",
            False,
            False,
            False,
            True,
            ["мы", "побеждать"],
        ),
        (
            "Он забивал, забивает и еще забивать будет много сезонов",
            False,
            False,
            False,
            True,
            ["он", "забивать", "быть", "сезон"],
        ),
        (
            "Артем Лукоянов и Дмитрий Воронков забили по голу",
            True,
            False,
            False,
            True,
            ["pers", "забить", "гол"],
        ),
        (
            "21 января Шипачев и Зарипов в Москве забили много голов 'Спартаку', "
            "а Сергей Широков получил 5+20 за грубость",
            True,
            True,
            True,
            True,
            [
                "date",
                "pers",
                "loc",
                "забить",
                "гол",
                "org",
                "per",
                "получить",
                "pen",
                "грубость",
            ],
        ),
        (
            "21 января Шипачев и Зарипов в Москве забили много голов 'Спартаку', "
            "а Сергей Широков получил 5+20 за 'Грубость'",
            False,
            False,
            False,
            False,
            [
                "январь",
                "шипачев",
                "и",
                "зарипов",
                "в",
                "москва",
                "забить",
                "много",
                "гол",
                "спартак",
                "а",
                "сергей",
                "широков",
                "получить",
                "за",
                "грубость",
            ],
        ),
    ],
)
def test_lemmatize(
    source_text,
    replace_ners_,
    replace_dates_,
    replace_penalties_,
    exclude_stop_words,
    expected_lemmas,
):
    assert (
        lemmatize(
            source_text,
            replace_ners_,
            replace_dates_,
            replace_penalties_,
            exclude_stop_words,
        )
        == expected_lemmas
    )


@pytest.mark.parametrize(
    "source_text,expected_lemmas",
    [
        ("Мы побеждали и 3:2, и 4:3, и 1:0", ["мы", "побеждать", "и"]),
        (
            "Я забивал, забиваю и буду забивать",
            ["я", "забивать", "и", "быть", "забивать"],
        ),
        (
            "Артем Лукоянов и Дмитрий Воронков забили по голу",
            ["per", "и", "per", "забить", "по", "гол"],
        ),
        ("Гол!!!", ["гол", "."]),
        ("Иван Петров12 сентября сыграет", ["per", "date", "сыграть"]),
        ("Правда или ...?", ["правда", "или", "?"]),
        ("'Динамо' Рига против 'Динамо' Москва", ["org", "против", "org"]),
        ("Матч 'Спартак'Москва - 'ЦСКА'-Москва", ["матч", "orgs"]),
        (
            "Сегодня Динамо Минск отправилось на выезд.",
            ["сегодня", "org", "отправиться", "на", "выезд", "."],
        ),
        (
            "В формате '5 х 5' было тяжело.",
            ["в", "формат", "быть", "тяжелый", "."],
        ),
        ("-Команда проиграла...", ["-", "команда", "проиграть", "."]),
        (
            "Да.-Мы довольны результатом",
            ["да", ".", "-", "мы", "довольный", "результат"],
        ),
        ("Спасибо, Иван-! Удачи!", ["спасибо", "per", ".", "удача", "."]),
        (
            "Составы команд: 'Автомобилист': Гросс "
            "1-я пятёрка: Трямкин-Щемеров; Макеев -Дацюк (К)-Мэйсек "
            "2-я пятёрка: Геноуэй -Зборовский; Секстон - Холланд (А)-Жукенов "
            "3-я пятёрка: Арзамасцев-Хольцер; Белоусов-Куликов-Голышев "
            "4-я пятёрка: Хрипунов -  Протапович- Литовченко",
            [
                "состав",
                "команда",
                ":",
                "org",
                ":",
                "per",
                "пятерка",
                ":",
                "pers",
                "пятерка",
                ":",
                "pers",
                "пятерка",
                ":",
                "pers",
                "пятерка",
                ":",
                "pers",
            ],
        ),
        (
            "Составы команд: 'Автомобилист': Гросс "
            "1-я пятёрка: Белоусов-Куликов-Голышев "
            "2-я пятёрка: Геноуэй-Зборовский-Секстон-Холланд-Жукенов "
            "3-я пятёрка: Хрипунов -  Протапович- Литовченко "
            "4-я пятёрка: Иванов-Петров",
            [
                "состав",
                "команда",
                ":",
                "org",
                ":",
                "per",
                "пятерка",
                ":",
                "pers",
                "пятерка",
                ":",
                "pers",
                "пятерка",
                ":",
                "pers",
                "пятерка",
                ":",
                "per",
            ],
        ),
        (
            "Команда г.Казани забила красивый гол команде г. Уфы.",
            [
                "команда",
                "loc",
                "забить",
                "красивый",
                "гол",
                "команда",
                "loc",
                ".",
            ],
        ),
        (
            "Бюджет по сравнению с сезоном 2019-2020 гг. был сокращен.",
            [
                "бюджет",
                "по",
                "сравнение",
                "с",
                "сезон",
                "date",
                ".",
                "быть",
                "сократить",
                ".",
            ],
        ),
        (
            "Играл за 'Металлург' с 2015 по 2016 гг. Потом уехал за океан.",
            [
                "играть",
                "за",
                "org",
                "с",
                "по",
                "date",
                ".",
                "потом",
                "уехать",
                "за",
                "океан",
                ".",
            ],
        ),
        (
            "Если мы не забьем, а я не на своей позиции?..",
            [
                "если",
                "мы",
                "не",
                "забить",
                "а",
                "я",
                "не",
                "на",
                "свой",
                "позиция",
                "?",
            ],
        ),
        (
            "А что дальше?.",
            [
                "а",
                "что",
                "далекий",
                "?",
            ],
        ),
        (
            "Счет серии -- -- 2:2.",
            [
                "счет",
                "серия",
                ".",
            ],
        ),
        (
            "Но почему?? ? - ?",
            [
                "но",
                "почему",
                "?",
            ],
        ),
        (
            "Счет серии - 2:2?",
            [
                "счет",
                "серия",
                "?",
            ],
        ),
        (
            "Иван Петров -- лучший бомбардир команды.",
            [
                "per",
                "-",
                "хороший",
                "бомбардир",
                "команда",
                ".",
            ],
        ),
        (
            "Счет серии -- -- 2-2 после двух матчей.",
            [
                "счет",
                "серия",
                "-",
                "после",
                "два",
                "матч",
                ".",
            ],
        ),
        (
            "Б о льшую часть времени команда провела в атаке.",
            [
                "больший",
                "часть",
                "время",
                "команда",
                "провести",
                "в",
                "атака",
                ".",
            ],
        ),
        (
            "'Автомобилист' отправился на выезд. После перерыва на игры "
            "сборной наша команда возобновляет чемпионат с выездной серии. "
            "'Автомобилисту'предстоит три матча в гостях.",
            [
                "org",
                "отправиться",
                "на",
                "выезд",
                ".",
                "после",
                "перерыв",
                "на",
                "игра",
                "сборная",
                "наш",
                "команда",
                "возобновлять",
                "чемпионат",
                "с",
                "выездной",
                "серия",
                ".",
                "org",
                "предстоять",
                "три",
                "матч",
                "в",
                "гость",
                ".",
            ],
        ),
        (
            "В следующем матче регулярного чемпионата КХЛ 'Сочи'12 ноября "
            "в Риге встретится с местным 'Динамо'.",
            [
                "в",
                "следующий",
                "матч",
                "регулярный",
                "чемпионат",
                "orgs",
                "date",
                "в",
                "loc",
                "встретиться",
                "с",
                "местный",
                "org",
                ".",
            ],
        ),
        (
            "'Локо-Юниор': Д.Назаров - Лысых - Козлов;Казаков - Грибков",
            ["org", ":", "pers"],
        ),
        (
            "Протокол матча: СКА - 'Динамо'Москва - 3:4 (2:2, 1:1, 0:1).",
            ["протокол", "матч", ":", "orgs", "."],
        ),
        (
            "В последних двух домашних матчах 'Варяги' взяли один балл, "
            "дважды уступив белорусскому 'Динамо-Шинник' 1. - 2:3ОТ, 2. - 0:1.",
            [
                "в",
                "последний",
                "два",
                "домашний",
                "матч",
                "org",
                "взять",
                "один",
                "балл",
                "дважды",
                "уступить",
                "белорусский",
                "org",
                ".",
            ],
        ),
        ("Голы забили: Иванов,Петров,Сидоров", ["гол", "забить", ":", "pers"]),
        (
            "Игрок Клубы СИ И 1 Коварж Якуб Автомобилист 7 50 2 Сорокин Илья "
            "ЦСКА 6 17 3 Хелльберг Магнус СКА 6 28 4 Паскуале "
            "Эдвард Барыс,Локомотив 6 46 5",
            ["игрок", "клуб", "си", "и", "pers", "org", "per", "org", "per", "org"],
        ),
        (
            "Группа А : 1. СДЮШОР БФСО 'Динамо'-2 (6 очков); 2. 'Торпедо'-2 "
            "(3 очка); 3. СДЮШОР ХК 'Юность-Минск'-2 (3 очка); 4. СДЮШОР "
            "ХК 'Юность-Минск'-3 (0 очков).",
            ["группа", "а", ":", "orgs", "."],
        ),
        ("Вадим Шипачев/Андрей Миронов/Динамо М/", ["pers", "org"]),
        (
            "Для воспитанников СДЮШОР им.Руслана Салея жребий определил соперника",
            ["для", "воспитанник", "org", "per", "жребий", "определить", "соперник"],
        ),
        (
            "'Ак Барс' выиграл 16 из 18 матчей КХЛ в Астане/Нур-Султане.",
            ["org", "выиграть", "из", "матч", "org", "в", "locs", "."],
        ),
        (
            "Список травмированных: Покка Вилле Стась Андрей Шарипзянов Дамир "
            "Якупов Наиль 'Волки' завершили выездную серию",
            [
                "список",
                "травмировать",
                ":",
                "pers",
                "org",
                "завершить",
                "выездной",
                "серия",
            ],
        ),
        (
            "Да-да, вы все- -правильно -говорите-",
            ["да", "вы", "весь", "правильно", "говорить"],
        ),
        (
            "Сегодня 20-летний экс-капитан команды 'Авангард-20' "
            "отмечает свой день рождения!",
            [
                "сегодня",
                "летний",
                "экс-капитан",
                "команда",
                "org",
                "отмечать",
                "свой",
                "день",
                "рождение",
                ".",
            ],
        ),
        (
            "-Команды 'Спартак-20' в сезоне-2020/2021 не было - "
            "в 2021-2022 году она появилась",
            [
                "-",
                "команда",
                "org",
                "в",
                "сезон",
                "не",
                "быть",
                "-",
                "в",
                "date",
                "она",
                "появиться",
            ],
        ),
        (
            "Сектора A, B, C доступны",
            ["сектор", "с", "доступный"],  # так как есть latin_c_to_cirillic
        ),
        ("Спонсор матча g-drive", ["спонсор", "матч", "drive"]),
        ("План 'Б' сработал", ["план", "сработать"]),
        (
            "Все билеты на сектора 'B' и C раскуплены.",
            ["весь", "билет", "на", "сектор", "и", "с", "раскупить", "."],
        ),
        ("Мы сыграли на '5-ку'.", ["мы", "сыграть", "на", "."]),
        (
            "Школа в 60-70-х действительно была отменная.",
            ["школа", "в", "действительно", "быть", "отменный", "."],
        ),
        ("Победили, т.к. забили", ["победить", "так", "как", "забить"]),
        ("Повезло, т.е. заслужили", ["повезти", "тот", "быть", "заслужить"]),
        (
            "Рыбки, т.е. симуляции, будут наказываться.",
            ["нырок", "тот", "быть", "симуляция", "быть", "наказываться", "."],
        ),
        (
            "Состав команды: вр. Сорокин, з. Петров, з. Сидоров, н. Иванов",
            ["состав", "команда", ":", "pers"],
        ),
        (
            "Состав на сегодняшний матч: вр Сорокин, з Петров, з Сидоров, н Иванов",
            ["состав", "на", "сегодняшний", "матч", ":", "pers"],
        ),
        (
            "Нападающий 2000 г.р. уехал играть заграницу",
            ["нападающий", "уехать", "играть", "заграница"],
        ),
        ("Спартак победил со счетом 1:1 Б.", ["org", "победить", "с", "счет"]),
        ("3:2Б. (1:1 0:0 1:1 1:0) статистика матча", ["статистика", "матч"]),
        ("3:2 БУЛ. счет матча", ["счет", "матч"]),
        ("Идет набор детей 2000/02 гг.р.", ["идти", "набор", "ребенок"]),
        (
            "Играл за сборные России U17 и U-18 в молодости",
            ["играть", "за", "сборный", "loc", "и", "в", "молодость"],
        ),
        ("'Адмирал-U17' победил в турнире.", ["org", "победить", "в", "турнир", "."]),
        ("'Адмирал U-17' победил в турнире.", ["org", "победить", "в", "турнир", "."]),
        (
            "Вчера 'Адмирал U17' выехал на матч.",
            ["вчера", "org", "выехать", "на", "матч", "."],
        ),
        ("Купил билеты в VIP-ложу.", ["купить", "билет", "в", "ложа", "."]),
        ("Смотрите новости в telegram-канале", ["смотреть", "новость", "в", "канал"]),
        ("Сегодня в КХЛе пройдет 5 матчей", ["сегодня", "в", "loc", "пройти", "матч"]),
        (
            "Под контролем ЦИБа будут все команды",
            ["под", "контроль", "циб", "быть", "весь", "команда"],
        ),
        ("УАЗик на ходу.", ["уазик", "на", "ход", "."]),
        (
            "Сотрудники ОМОНа присутствуют на стадионе",
            ["сотрудник", "org", "присутствовать", "на", "стадион"],
        ),
        ("'Спартак' проиграл шведскому АИКу", ["org", "проиграть", "шведский", "loc"]),
        ("Во всех ВУЗах страны", ["в", "весь", "вуз", "страна"]),
        (
            "Результаты матчей смотрите во 'ВКонтакте'",
            ["результат", "матч", "смотреть", "в", "org"],
        ),
        (
            "Результаты матчей смотрите во ВКонтакте",
            ["результат", "матч", "смотреть", "в", "org"],
        ),
        (
            "Вчера игроки HIFKа заболели COVIDом",
            ["вчера", "игрок", "org", "заболеть", "covid"],
        ),
        ("Сегодня в KHLе пройдет 5 матчей", ["сегодня", "в", "org", "пройти", "матч"]),
        ("Проехался на TANECOмобиле.", ["проехаться", "на", "taneco", "."]),
        ("Мы давно c ним дружим", ["мы", "давно", "с", "он", "дружить"]),
        ("C Новым Годом!", ["с", "новый", "год", "."]),
        ("Я отдал паc нападающему.", ["я", "отдать", "пас", "нападающий", "."]),
        ("Мне пришло много пиcем!", ["я", "прийти", "много", "письмо", "."]),
        ("Посещение кафе, кино и т.д.?", ["посещение", "кафе", "кино", "и", "?"]),
        ("И.о. главного тренера", ["главный", "тренер"]),
        ("P.S. На матче ожидается концерт", ["на", "матч", "ожидаться", "концерт"]),
        (
            "Все билеты на стартовый матч 'Витязя' с 'Северсталью' на 13 "
            "сентября раскуплены. P.S. Аншлаг!",
            [
                "весь",
                "билет",
                "на",
                "стартовый",
                "матч",
                "org",
                "с",
                "org",
                "на",
                "date",
                "раскупить",
                ".",
                "аншлаг",
                ".",
            ],
        ),
        (
            "Cегодня c нами сыграла группа, cпевшая песню We Are The Сhampions, "
            "с шансом обыграть наc. See matсh results in doс.",
            [
                "сегодня",
                "с",
                "мы",
                "сыграть",
                "группа",
                "спеть",
                "песня",
                "we",
                "are",
                "the",
                "champions",
                "с",
                "шанс",
                "обыграть",
                "мы",
                ".",
                "see",
                "match",
                "results",
                "in",
                "doc",
                ".",
            ],
        ),
        ("Да кто вам такое сказал?!!", ["да", "кто", "вы", "такой", "сказать", "?"]),
        ("Да кто вам такое сказал!!?", ["да", "кто", "вы", "такой", "сказать", "?"]),
        ("Кто знал...", ["кто", "знать", "."]),
        ("Cтатистика. (22-11).", ["статистика", "."]),
        (
            "Игроки сдали теcт на COVID-19 по приезду в Хельсинки.",
            ["игрок", "сдать", "тест", "на", "covid", "по", "приезд", "в", "loc", "."],
        ),
        (
            "Покупайте билеты на cайте билеты.ру. Cпешите их осталось немного!",
            [
                "покупать",
                "билет",
                "на",
                "сайт",
                ".",
                "спешить",
                "они",
                "остаться",
                "немного",
                ".",
            ],
        ),
        (
            "C матча 'Амур' VS 'Адмирал' начнется сегодняшний игровой день!",
            ["с", "матч", "orgs", "начаться", "сегодняшний", "игровой", "день", "."],
        ),
        (
            "C матча 'Амур'-'Адмирал' начнется сегодняшний игровой день!",
            ["с", "матч", "orgs", "начаться", "сегодняшний", "игровой", "день", "."],
        ),
        (
            "C матча 'Амур' VS 'Барыс' начнется сегодняшний игровой день!",
            ["с", "матч", "orgs", "начаться", "сегодняшний", "игровой", "день", "."],
        ),
        (
            "Андрей Педан прокомментировал столкновение с Иваном Дроздовым. "
            "- Иван сам пошел в стык.",
            [
                "per",
                "прокомментировать",
                "столкновение",
                "с",
                "per",
                ".",
                "-",
                "per",
                "сам",
                "пойти",
                "в",
                "стык",
                ".",
            ],
        ),
        (
            "Андрей Разин. - Паша смял нас в первых сменах",
            ["per", ".", "-", "per", "смять", "мы", "в", "первый", "смена"],
        ),
        (
            "Андрей Разин: - Паша смял нас в первых сменах",
            ["per", ":", "-", "per", "смять", "мы", "в", "первый", "смена"],
        ),
        (
            "Андрей Разин: 'Паша смял нас в первых сменах'",
            ["per", ":", "per", "смять", "мы", "в", "первый", "смена"],
        ),
        (
            "ТОП-10 голов прошлой игровой недели",
            ["топ", "гол", "прошлый", "игровой", "неделя"],
        ),
        (
            "Играл за родную команду.",
            ["играть", "за", "родной", "команда", "."],
        ),
        (
            "Нападающий СКА Андрей     Кузьменко подвёл итоги "
            "встречи c минским Динамо (2:3 ОТ).",
            [
                "нападающий",
                "org",
                "per",
                "подвести",
                "итог",
                "встреча",
                "с",
                "минский",
                "org",
                ".",
            ],
        ),
        (
            " - Хорошее. - Шайба, пропущенная в третьем периоде, была "
            "лишней или всё-таки команда мало забила?",
            [
                "-",
                "хороший",
                ".",
                "-",
                "шайба",
                "пропустить",
                "в",
                "третий",
                "период",
                "быть",
                "лишний",
                "или",
                "все-таки",
                "команда",
                "мало",
                "забить",
                "?",
            ],
        ),
        (
            " - Хорошее. - Шайба Артема Лукоянова, забитая в "
            "третьем периоде, была решающей?",
            [
                "-",
                "хороший",
                ".",
                "-",
                "шайба",
                "per",
                "забить",
                "в",
                "третий",
                "период",
                "быть",
                "решающий",
                "?",
            ],
        ),
        (
            " - Хорошее. - Шайбу Артема Лукоянова, забитую в "
            "третьем периоде, не засчитали",
            [
                "-",
                "хороший",
                ".",
                "-",
                "шайба",
                "per",
                "забить",
                "в",
                "третий",
                "период",
                "не",
                "засчитать",
            ],
        ),
        (
            " - Хорошее. - Шайбы Артема Лукоянова, забитые в "
            "третьем периоде, были решающими?",
            [
                "-",
                "хороший",
                ".",
                "-",
                "шайба",
                "per",
                "забить",
                "в",
                "третий",
                "период",
                "быть",
                "решающий",
                "?",
            ],
        ),
        (
            " - Хорошее. - Гол, пропущенный в третьем периоде, "
            "был лишним или всё-таки команда мало забила?",
            [
                "-",
                "хороший",
                ".",
                "-",
                "гол",
                "пропустить",
                "в",
                "третий",
                "период",
                "быть",
                "лишний",
                "или",
                "все-таки",
                "команда",
                "мало",
                "забить",
                "?",
            ],
        ),
        (
            " - Хорошее. - Гол Артема Лукоянова, забитый в "
            "третьем периоде, был решающим?",
            [
                "-",
                "хороший",
                ".",
                "-",
                "гол",
                "per",
                "забить",
                "в",
                "третий",
                "период",
                "быть",
                "решать",
                "?",
            ],
        ),
        (
            "Закончилось основное время матча.",
            ["закончиться", "основной", "время", "матч", "."],
        ),
        (
            "Данис Зарипов - лучший бомбардир 'Ак Барса' в новейшей истории. "
            "Капитан 'Ак Барса' Данис Зарипов стал лучшим бомбардиром клуба в "
            "высших дивизионах российского хоккея. Зарипов обошёл предыдущего "
            "рекордсмена - Алексея Морозова - на счету которого 621 (266+355) "
            "очко за 'Ак Барс' в чемпионатах России и КХЛ.",
            [
                "per",
                "-",
                "хороший",
                "бомбардир",
                "org",
                "в",
                "новый",
                "история",
                ".",
                "капитан",
                "org",
                "per",
                "стать",
                "хороший",
                "бомбардир",
                "клуб",
                "в",
                "высокий",
                "дивизион",
                "российский",
                "хоккей",
                ".",
                "per",
                "обойти",
                "прошлый",
                "рекордсмен",
                "-",
                "per",
                "-",
                "на",
                "счет",
                "который",
                "очко",
                "за",
                "org",
                "в",
                "чемпионат",
                "loc",
                "и",
                "org",
                ".",
            ],
        ),
        (
            "Дмитрий Квартальнов: 'Будет очень жёсткая серия'. Главный тренер "
            "'Ак Барса' Дмитрий Квартальнов подвёл итоги серии с нижегородским "
            "'Торпедо' ( 2:1 ОТ ), оценил игру Тревора Мёрфи и рассказал о "
            "возвращении Даниса Зарипова . - Не дотерпели в третьем периоде, "
            "пропустили гол, играя '4 на 5'. В овертайме забили '5 на 4'. - Как "
            "вам качество игры команды сегодня? - Хорошее. - Пропущенная в "
            "третьем периоде шайба была лишней или всё-таки команда мало забила "
            "в основное время? - Когда счёт такой, 1:1, конечно, мало забиваем. "
            "- Что скажете по поводу удалений в составе вашей команды? Показалось, "
            "часть из них были необязательными. - Наверное, сегодня одна из немногих "
            "игр, когда в большинстве мы сыграли больше, чем в меньшинстве. ",
            [
                "per",
                ":",
                "быть",
                "очень",
                "жесткий",
                "серия",
                ".",
                "главный",
                "тренер",
                "org",
                "per",
                "подвести",
                "итог",
                "серия",
                "с",
                "нижегородский",
                "org",
                "оценить",
                "игра",
                "per",
                "и",
                "рассказать",
                "о",
                "возвращение",
                "per",
                ".",
                "-",
                "не",
                "дотерпеть",
                "в",
                "третий",
                "период",
                "пропустить",
                "гол",
                "играть",
                ".",
                "в",
                "овертайм",
                "забить",
                ".",
                "-",
                "как",
                "вы",
                "качество",
                "игра",
                "команда",
                "сегодня",
                "?",
                "-",
                "хороший",
                ".",
                "-",
                "пропустить",
                "в",
                "третий",
                "период",
                "шайба",
                "быть",
                "лишний",
                "или",
                "все-таки",
                "команда",
                "мало",
                "забить",
                "в",
                "основной",
                "время",
                "?",
                "-",
                "когда",
                "счет",
                "такой",
                "конечно",
                "мало",
                "забивать",
                ".",
                "-",
                "что",
                "сказать",
                "по",
                "повод",
                "удаление",
                "в",
                "состав",
                "ваш",
                "команда",
                "?",
                "показаться",
                "часть",
                "из",
                "они",
                "быть",
                "необязательный",
                ".",
                "-",
                "наверно",
                "сегодня",
                "один",
                "из",
                "немногий",
                "игра",
                "когда",
                "в",
                "большинство",
                "мы",
                "сыграть",
                "большой",
                "чем",
                "в",
                "меньшинство",
                ".",
            ],
        ),
    ],
)
def test_lemmatize_with_stop_words_and_all_replacements(source_text, expected_lemmas):
    assert (
        lemmatize(
            text=source_text,
            replace_ners_=True,
            replace_dates_=True,
            replace_penalties_=True,
            exclude_stop_words=False,
        )
        == expected_lemmas
    )


@pytest.mark.parametrize(
    "source_codes,expected_codes",
    [
        ([], []),
        ([10], [10]),
        ([10, 50, 100], [10, 50, 100]),
        ([10, 50, 100, 50, 10], [10, 50, 100, 50, 10]),
        ([10, 10, 50, 50, 50, 100, 100, 100, 100, 10, 10], [10, 50, 100, 10]),
    ],
)
def test_merge_codes(source_codes, expected_codes):
    assert merge_codes(source_codes) == expected_codes


class TestLemmasCodes:

    test_lemmas_dictionary_file = Path(__file__).parent / "test_lemmas_dictionary.json"
    freq_dict = {
        PLACEHOLDER: 0,
        UNKNOWN: 1,
        ".": 2,
        "команда": 3,
        "забить": 4,
        "гол": 5,
        "московский": 6,
        "per": 7,
        "org": 8,
        "loc": 9,
        "date": 10,
        "набрать": 11,
        "очко": 12,
        "карьера": 13,
        "февраль": 14,
        "в": 15,
    }
    lemmas = ["сегодня", "московский", "команда", "забить", "красивый", "гол", "."]
    text = "21 февраля в Казани Иван Иванов набрал сотое очко за карьеру за 'Торпедо'"

    @pytest.mark.parametrize(
        "exclude_unknown,max_len,expected_codes",
        [
            (False, None, [1, 6, 3, 4, 1, 5, 2]),
            (False, 5, [1, 6, 3, 4, 1]),
            (False, 10, [0, 0, 0, 1, 6, 3, 4, 1, 5, 2]),
            (True, None, [6, 3, 4, 5, 2]),
            (True, 3, [6, 3, 4]),
            (True, 10, [0, 0, 0, 0, 0, 6, 3, 4, 5, 2]),
        ],
    )
    def test_lemmas_to_codes(self, exclude_unknown, max_len, expected_codes):
        assert (
            lemmas_to_codes(self.lemmas, self.freq_dict, exclude_unknown, max_len)
            == expected_codes
        )

    @pytest.mark.parametrize(
        "codes,expected_lemmas",
        [
            ([0, 0], ["", ""]),
            ([0, 0, 1, 1, 2], ["", "", "???", "???", "."]),
            (
                [0, 0, 1, 6, 3, 4, 1, 5, 2],
                ["", "", "???", "московский", "команда", "забить", "???", "гол", "."],
            ),
        ],
    )
    def test_codes_to_lemmas(self, codes, expected_lemmas):
        assert codes_to_lemmas(codes, self.freq_dict) == expected_lemmas

    def test_get_freq_dict(self):
        assert get_freq_dict(self.test_lemmas_dictionary_file) == {
            PLACEHOLDER: 0,
            UNKNOWN: 1,
            ".": 2,
            "и": 3,
            "а": 4,
            "команда": 5,
            "клуб": 6,
        }

    @pytest.mark.parametrize(
        "replace_ners_,replace_dates_,replace_penalties_,exclude_stop_words,exclude_unknown,expected_codes",
        [
            (False, False, False, False, False, [14, 15, 1, 11, 1, 12, 1, 13, 1]),
            (True, True, True, True, False, [10, 9, 7, 11, 1, 12, 13, 8]),
            (False, False, False, False, True, [14, 15, 11, 12, 13]),
        ],
    )
    def test_text_to_codes(
        self,
        replace_ners_,
        replace_dates_,
        replace_penalties_,
        exclude_stop_words,
        exclude_unknown,
        expected_codes,
        max_len=None,
    ):
        assert (
            text_to_codes(
                self.text,
                replace_ners_,
                replace_dates_,
                replace_penalties_,
                exclude_stop_words,
                exclude_unknown,
                self.freq_dict,
                max_len,
            )
            == expected_codes
        )
